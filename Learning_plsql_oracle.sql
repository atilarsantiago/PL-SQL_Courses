/*CREATE USER C##aluno --criando schema
IDENTIFIED BY aluno --senha inicial
DEFAULT TABLESPACE Users
TEMPORARY TABLESPACE Temp;

ALTER USER aluno IDENTIFIED BY treinamento; --alterando senha

GRANT DBA TO aluno; --concedendo privilégio DBA*/

--Criar uma table e inserir alguns dados.
CREATE TABLE TB_TREINAMENTO
    (
        "ID" NUMBER(5) NOT NULL,
        "NOME" VARCHAR2(10),
        "SEXO" CHAR(1)
    );
    
INSERT INTO TB_TREINAMENTO (ID,NOME,SEXO)VALUES (1,'Atila','M');

--Criação de Constrains na table. Constrains são: Primary Key, Unique, Foreign Key, Check and Not Null

ALTER TABLE "TB_TREINAMENTO" ADD CONSTRAINT "CK_TREINA_SEXO" CHECK (SEXO IN ('M','F')) ENABLE; --SOMENTE M OU F
ALTER TABLE "TB_TREINAMENTO" ADD CONSTRAINT "PK_TREINAMENTO" PRIMARY KEY ("ID") ENABLE; -- ID NÃO PODERÃO SE REPETIR NUNCA
ALTER TABLE "TB_TREINAMENTO" RENAME CONSTRAINT "SYS_C007469" TO "CK_NOTNULL"; --RENOMEADA DE UM NOME GERADO ALTOMATICAMENTE

ALTER TABLE "TB_TREINAMENTO" DROP CONSTRAINT CK_NOTNULL; --ELIMINANDO UMA CONSTRAINT
 

DROP TABLE "TB_TREINAMENTO"; -- ELIMINAR UMA TABELA INTEIRA

--APAGAR UMA CONSTRAINT
ALTER TABLE "TB_LIVRO" DROP CONSTRAINT "FK_LIVRO_EDITORA";

--CRIAR UMA CONSTRAINT FOREIGN KEY REFERENCIANDO A OUTRA TABELA DE ONDE VIRÁ A PRIMARY KEY
ALTER TABLE TB_LIVRO ADD CONSTRAINT FK_LIVRO_EDITORA FOREIGN KEY ("ID_EDITORA") REFERENCES "C##ALUNO"."TB_EDITORA" ("ID_EDITORA") ENABLE;
-- DISABLE A CONSTRAINT
ALTER TABLE TB_LIVRO_AUTOR DISABLE CONSTRAINTS FK_LIVRO_AUTOR_AUTOR;
-- ENABLE A CONSTRAINT
ALTER TABLE TB_LIVRO_AUTOR ENABLE CONSTRAINTS FK_LIVRO_AUTOR_AUTOR;

--REALIZANDO UM SELECT COM JOIN
SELECT livro.titulo,
        editora.descricao
FROM tb_livro livro --CRIANDO UM ALIAS PARA TB_LIVRO E TB_EDITORA, ficaram "livro" and "editora"
    JOIN 
        tb_editora editora ON (livro.id_editora=editora.id_editora) --essa condição precisa ser atendida para que algum conteúdo apareceça
/*LEFT JOIN = TUDO QUE TEM NA MAIN TABLE (LIVRO) MESMO QUE NÃO TENHA NA TB_EDITORA 
RIGHT JOIN = TUDO QUE TIVER NA TB_EDITORA MESMO QUE NÃO TEM NA MAIN TABLE (LIVRO)
FULL JOIN = MOSTRA TUDO QUE TEM NAS TABLES QUE ESTÃO SOB O JOIN*/

--SELECT COM DISTINCT
SELECT DISTINCT  NOME, SEXO FROM TB_AUTOR; --SHOWS JUST ONE RESULT OF DIFERENTS NAMES AND SEX

--SELECT COM WHERE (FILTRO)
SELECT * FROM TB_AUTOR
    WHERE SUBSTR(NOME,1,1)='J' --characters in column nome from position 1 to 1 = j
SELECT * FROM TB_AUTOR WHERE NOME IS NOT NULL; --Bring all columns when in column "Name" it's not Null 
SELECT * FROM TB_AUTOR WHERE SUBSTR(NOME,1,2)='Ma'; --characters in column nome, position 1 to 2 = Ma
SELECT NOME,SEXO FROM TB_AUTOR WHERE SUBSTR(SEXO,1,1)='F' ORDER BY NOME; --Upward
SELECT NOME,SEXO FROM TB_AUTOR WHERE SUBSTR(SEXO,1,1)='F' ORDER BY NOME DESC; --Downward
SELECT NOME,SEXO FROM TB_AUTOR WHERE NOME='Mario';


--SELEC WITH UPPER AND LOWER
    --Attetion to comma
SELECT UPPER (NOME) AS MAISCULA FROM TB_AUTOR;
SELECT NOME, UPPER (NOME) AS MAISCULA FROM TB_AUTOR; --2 COLUMN, one original and other upper
SELECT NOME, LOWER (NOME) as minuscula FROM TB_AUTOR WHERE SUBSTR(nome,1,2)='Jo'; --using other forms
SELECT NOME, UPPER(NOME) as maiscula FROM TB_AUTOR WHERE SUBSTR(NOME,1,2)='Ma';
    
--USING SELECT WITH "LIKE" TO FILTER

SELECT * FROM TB_LIVRO WHERE TITULO LIKE '%de%'; --WORDS WITH "de" INTO
SELECT * FROM TB_LIVRO WHERE UPPER(TITULO)LIKE '%DE%'; --THE SAME RESULT BUT NOW THE %DE% IS ACCEPTED BECAUSE UPPER(TITULO) WAS USED
SELECT * FROM TB_AUTOR WHERE NOME LIKE 'M%';--WORDS STARTING WITH 'M'
    /* M% = WORDS STARTED WITH M
        %HI% = WORDS WITH 'HI'*/
  
--UPDATE DATA IN A TABLE
UPDATE TB_LIVRO SET QTDE_ESTOQUE=500 WHERE TITULO ='Banco de Dados';

--DELETE DATA IN A TABLE
DELETE FROM TB_AUTOR WHERE NOME='João';--Only could delete this line if Foreign key is deleted
    